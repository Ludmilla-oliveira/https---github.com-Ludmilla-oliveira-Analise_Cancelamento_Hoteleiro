
PT - Projeto 4_Análise de cancelamentos de hotéis

Projeto 4 - Cancelamento de Hotéis 

Gasto com as comissões da agência de marketing por reserva 

Ver como está o percentual de cancelamento 
1 em cada 3 reservas sejam canceladas 
Revisar tudo relacionado à cancelamentos 
os dados estão mno BigQuery 


Validar as hipóteses de Estela e equipe - O negócio 

As reservas feitas com mais antecedência correm maior risco de cancelamento.
As reservas que incluem crianças têm menor risco.
Os usuários que fizeram alguma alteração em sua reserva têm menor risco. 
Quando o usuário faz uma solicitação especial o rsico é menor.
As reservas que possuem um "ADR" baixo o risco é menor. 


                                     Perguntas à serem respondidas:

a) De quanto seria a economia anual estimada caso renegociassem o contrato com a agência para que  o pagto fosse por reserva materializada (não cancelada)?

b) O que você pode dizer sobre as hipóteses levantadas das reservas com maior probabilidade de serem canceladas? Que recomendações você tem com base em suas descobertas?  


Passo 1:


cenário 
pagamos um pequeno custo fixo mensal pelo serviço, mas a maior parte é um custo variável vinculado às reservas”. 

“mas o que acontece se o cliente cancelar sua reserva? Nesse caso estamos pagando por algo que não se concretiza em vendas, pois entendo que os clientes só pagam quando chegam ao hotel, não quando fazem a reserva.


Só preciso do banco de dados das reservas e saber o valor do custo variável que estamos pagando à agência”.

Pelo que estou lendo, o contrato diz que temos que pagar 1,5 USD por cada reserva feita."

Quando alguém cancela com menos de 3 dias de antecedência, nos custa cerca de 120 USD extra.


3 - saber quais valores a variável (coluna) hotel pode assumir: 


SELECT Distinct hotel
from `ancient-blade-353417.123.hotel_bookings`; 


# Limitar o número de linhas de consultas SQL

https://pt.stackoverflow.com/questions/312249/limitar-o-n%C3%BAmero-de-linhas-de-consultas-sql

SELECT estado, num_ocorrencia
FROM bra_ocorrencias
WHERE nome like 'João'
LIMIT 5
ORDER BY num_ocorrencia DESC
Ou

SELECT estado, num_ocorrencia
TOP 5
FROM bra_ocorrencias
WHERE nome like 'João'
ORDER BY num_ocorrencia DESC;
Ou

SELECT estado, num_ocorrencia
FROM bra_ocorrencias
WHERE nome like 'João'
AND ROWNUM <= 5
ORDER BY num_ocorrencia DESC

3.0 contar quantas linhas todo o nosso conjunto de dados possui

select count (*) from `ancient-blade-353417.123.hotel_bookings`;  

São 119386 Linhas de registro ao todo 

3.0 Consultar Apenas reservas feitas em um City Hotel. Use a função WHERE para obter esse resultado:

	SELECT *  
	from 
	   `ancient-blade-353417.123.hotel_bookings` 
	where hotel =  'City Hotel';

3.0 Reservas feitas em 2015 (consulta)

SELECT count(*)
FROM `ancient-blade-353417.123.hotel_bookings` 
WHERE arrival_date_year = 2015;

3.0 Reservas feitas em 2015 OU 2017 (consulta)

SELECT count(*)
FROM `ancient-blade-353417.123.hotel_bookings` 
WHERE arrival_date_year = 2015 or arrival_date_year = 2017;

#quantas reservas foram feitas no mês de dezembro de 2016?


SELECT count(*)
FROM `ancient-blade-353417.123.hotel_bookings` 
WHERE arrival_date_month = 'December' AND arrival_date_year = 2016;

#Vamos considerar a variável “customer_type”. 
Isso tem 4 valores possíveis: "Transient", 
"Transient-Party", "Contract" e "Group". 
Se for solicitado a filtrar por aqueles que 
são "Transient" e "Transient-Party", podemos usar o comando LIKE.

SELECT * 
FROM `ancient-blade-353417.123.hotel_bookings`                                       
WHERE customer_type LIKE 'Transient%'

3.0 Criar tabela 2 no mesmo DataSet


create  table `ancient-blade-353417.123.hotel_bookings2`
AS 
SELECT *, CONCAT (arrival_date_year, '-', arrival_date_month,'-' ,arrival_date_day_of_month)
AS arrive_date
from `ancient-blade-353417.123.hotel_bookings`


# No setor do turismo, as estações do ano refletem 
frequentemente as épocas altas e as épocas baixas. 
Portanto, seria útil criar uma coluna adicional que 
indicasse a estação do ano. 
O que queremos é que, se o mês de inscrição for janeiro,
 fevereiro ou março, que a nova coluna salve a palavra 
"Verão". Se for abril, maio ou junho, que ele guarde o 
outono, e assim por diante


SELECT *,
CASE
    WHEN arrival_date_month IN ('January', 'February', 'March') THEN 'Verão'
    WHEN arrival_date_month IN ('April', 'May', 'June') THEN 'Outono'
    WHEN arrival_date_month IN ('July', 'August', 'September') THEN 'Inverno'
    ELSE 'Primavera'
    END AS arrival_season
FROM `ancient-blade-353417.123.hotel_bookings2`;

 criar uma nova variável "lead_time_segment" que 
segmenta a coluna "lead_time" em três segmentos: "Curto"
 (<30 dias), "Médio" ( entre 30 e 90 dias) e "Long" 
(mais de 90 dias). Aqui a instrução BETWEEN pode ser útil.


create table `ancient-blade-353417.123.hotel_bookings5`
as 
SELECT *,
    CASE
        WHEN lead_time <30 THEN 'Curto'
        WHEN lead_time BETWEEN 30 AND 90 THEN 'Médio'
        WHEN lead_time >90 THEN 'Longo'
        END AS lead_time_segment
FROM `ancient-blade-353417.123.hotel_bookings3`

SELECT CAST( arrival_date  AS DATE FORMAT 'YYYY-MON-DD')  FROM  `ancient-blade-353417.123.hotel_bookings2`;
####################
SELECT *
CAST ( arrival_date  AS DATE FORMAT 'YYYY-MON-DD')  FROM  `ancient-blade-353417.123.hotel_bookings2`;
porém deu erro - precisa ser feito um tratamento de datas 

Passo 01 - Consulta para alteração de data 

select
case
when arrival_date_month = 'January' THEN '01'
when arrival_date_month = 'february' THEN '02'
when arrival_date_month = 'March' THEN '03'
when arrival_date_month = 'April' THEN '04'
when arrival_date_month = 'May' THEN '05'
when arrival_date_month = 'June' THEN '06'
when arrival_date_month = 'July' THEN '07'
when arrival_date_month = 'August' THEN '08'
when arrival_date_month = 'September' THEN '09'
when arrival_date_month = 'Octuber' THEN '10'
when arrival_date_month = 'November' THEN '11'
when arrival_date_month = 'December' THEN '12'
end  
FROM `ancient-blade-353417.123.hotel_bookings2`

--where arrival_date_month like 'Dec%' -- verificar alteração de tudo antes de Dezembro 

-- Criar tabela e 
create table `ancient-blade-353417.123.hotel_bookings3`
AS
select *, concat (arrive_date_year, '-' 
case
when arrival_date_month = 'January' THEN '01'
when arrival_date_month = 'february' THEN '02'
when arrival_date_month = 'March' THEN '03'
when arrival_date_month = 'April' THEN '04'
when arrival_date_month = 'May' THEN '05'
when arrival_date_month = 'June' THEN '06'
when arrival_date_month = 'July' THEN '07'
when arrival_date_month = 'August' THEN '08'
when arrival_date_month = 'September' THEN '09'
when arrival_date_month = 'Octuber' THEN '10'
when arrival_date_month = 'November' THEN '11'
when arrival_date_month = 'December' THEN '12'
end  

 '-', arrive-date_day_of_month) as 
arrival_date_v2
FROM `ancient-blade-353417.123.hotel_bookings2`

------
select *, 
concat (arrival_date_year, '-',
case
when arrival_date_month = 'January' THEN '01'
when arrival_date_month = 'february' THEN '02'
when arrival_date_month = 'March' THEN '03'
when arrival_date_month = 'April' THEN '04'
when arrival_date_month = 'May' THEN '05'
when arrival_date_month = 'June' THEN '06'
when arrival_date_month = 'July' THEN '07'
when arrival_date_month = 'August' THEN '08'
when arrival_date_month = 'September' THEN '09'
when arrival_date_month = 'Octuber' THEN '10'
when arrival_date_month = 'November' THEN '11'
when arrival_date_month = 'December' THEN '12'
end,
 '-',
arrival_date_day_of_month ) as format_date
FROM `ancient-blade-353417.123.hotel_bookings2`

LINKS: https://stackoverflow.com/questions/54409119/concat-time-in-hrmin-for-bigquery
       https://docs.microsoft.com/en-us/sql/t-sql/functions/cast-and-convert-transact-sql?view=sql-server-ver16
--------------------------------------------------------
select 
  concat (arrive_date_year, '-', arrive-date_day_of_month) AS 
arrival_date_v2

DATE TROCAR LEAD_TIME 

DATE_SUB(arrival_date_v2, INTERVAL CAST(lead_time AS INT64) DAY)

select 
concat (arrive_date_year, '-', arrive-date_day_of_month) as 
arrival_date_v2
format_date ('yyyy-mm-dd', date)
FROM `ancient-blade-353417.123.hotel_bookings2`

--Preço médio por noite utilizando o Group By (consulta dos hotéis)

SELECT  hotel, AVG(adr) AS preco_media_por_noite
FROM `ancient-blade-353417.123.hotel_bookings3`
GROUP BY hotel


-----Contagem de chegadas
SELECT  hotel, 
count(arrival_date_v2) 
FROM `ancient-blade-353417.123.hotel_bookings3`
Group By hotel

SELECT  hotel, 
sum(arrival_date_v2) 
FROM `ancient-blade-353417.123.hotel_bookings3`
Group By hotel

Group By por tipo hotel e diárias tipo 

SELECT  
hotel,
lead_time_segment, 
count (lead_time_segment)

FROM `ancient-blade-353417.123.hotel_bookings4`
group by hotel,lead_time_segment;


-- O número de reservas existentes para cada segmento da variável lead_time_segment calculada anteriormente
SELECT  
hotel,
lead_time_segment, 
count (lead_time_segment)

FROM `ancient-blade-353417.123.hotel_bookings4`
group by hotel,lead_time_segment;
where = 2015

O número de reservas que temos para cada tipo de hotel durante os anos de 2015 e 2016 (aqui você deve usar WHERE além de GROUP BY)

SELECT  
hotel,
count 
SELECT
  hotel,
  arrive_date, 
  COUNT(*) as reservas_2015
FROM
  `ancient-blade-353417.123.hotel_bookings4`
WHERE
  arrive_date_year= 2015
GROUP BY
  hotel,
arrival_date_v2


-- Número de reservas tipo hotel ano 2015
   SELECT
  arrival_date_v2,
  hotel,
  COUNT(*) as reservas_2015,
  SUM(is_canceled) AS num_canceled
FROM
  `ancient-blade-353417.123.hotel_bookings5`
WHERE
  arrival_date_year= 2015
GROUP BY
  hotel,
arrival_date_v2

-- SOMA todos os cancelamentos para a data de cada tipo de hotel:
5.1  
-- Pagando comissão à agência de marketing por uma reserva que acabou não se concretizando. 
De acordo com o briefing, são pagos 1,5 USD por cada reserva feita, mas quando esse hóspede 
cancela, “perdemos” esse investimento de 1,5 USD.Quando um cliente cancela com menos de 3 
dias de antecedência, a rede estima que perde 120 USD.





5.1 

 5.2 Impacto de um cancelamento feito com menos de 3 dias de antecedência
 
 --Comando AS (reservation_date por Booking_date)
select 
	reservation_status_date as booking_date,
	DATE_DIFF(arrival_date_v2,reservation_status_date, day) AS dias_entre_cancel_chegada
  FROM `ancient-blade-353417.123.hotel_bookings5`
  where is_canceled = 1
  ORDER BY booking_date;
  
  --Criar tabela 6 para contar o número de cancelamentos 
create table `ancient-blade-353417.123.hotel_bookings6`
  AS (
select 
	reservation_status_date as booking_date,
	DATE_DIFF(arrival_date_v2,reservation_status_date, day) AS dias_entre_cancel_chegada
  FROM `ancient-blade-353417.123.hotel_bookings5`
  where is_canceled = 1
  ORDER BY booking_date);
  
  
# COUNTIF 

SELECT
	booking_date,
	     COUNTIF (is_canceled = 1) AS 
	   canceled_booking,
	     COUNTIF (is_canceled = 0) AS 
	   not_canceled_booking,
        (COUNTIF (is_canceled = 1))*1.5 AS 
	   canceled_booking_payment,
        (COUNTIF (is_canceled = 0))*1.5 AS 
	   not_canceled_booking_payment
       FROM
      `ancient-blade-353417.123.hotel_bookings5`
          GROUP BY
        booking_date


GUARDAR!!!!!!!!!!!

select 
	reservation_status_date as booking_date,
	DATE_DIFF(arrival_date_v2,reservation_status_date, day) AS dias_entre_cancel_chegada
  FROM `ancient-blade-353417.123.hotel_bookings5`
  where is_canceled = 1
  ORDER BY booking_date;
  
  
5.2 criar tabela ---Impacto de um cancelamento feito com menos de 3 dias de antecedência

create table 
 `ancient-blade-353417.123.hotel_bookings6' AS (
	select 
	booking_date AS reservation_date
	count(dias_entre_cancel_e_chegada) AS cancel_menos_3_dias, 
	count (cancel_menos_3_dias) *  120 as impacto_financeiro
  FROM `ancient-blade-353417.123.hotel_bookings5'
  where is_canceled = 1)
  ORDER BY reservation_date;


tabela 7
 create table `ancient-blade-353417.123.hotel_bookings7`
 AS (
	select 
	booking_date AS reservation_date
	count(dias_entre_cancel_e_chegada) AS cancel_menos_3_dias, 
	count (cancel_menos_3_dias) *  120 as impacto_financeiro,
  FROM `ancient-blade-353417.123.hotel_bookings5'
  where is_canceled = 1)
  ORDER BY booking_date);

--Select  = colunas--
--From = Tabelas--
--Where = Condições--


--Query_Date 

https://github.com/webmundi/formatar-datas-oracle-TO_CHAR-PLSQL/blob/master/COMO%
20FORMATAR%20DATAS%20NO%20ORACLE%20COM%20PL%20SQL%20SCHEMA%20HR.sql

Funções, operadores e condicionais BigQuery

https://cloud.google.com/bigquery/docs/reference/standard-sql/functions-and-operators?hl=pt-br#cast_as_date



create table 
 `ancient-blade-353417.123.hotel_bookings.diff_days_cancel' AS (
	select 
	booking_date, 
	count(dias_entre_cancel_e_chegada) AS cancel_menos_3_dias, 
	count (cancel_menos_3_dias) *  120 as impacto_financeiro
  FROM `ancient-blade-353417.123.hotel_bookings.diff_days_cancel'
  where is_canceled = 1)
  ORDER BY reservation_date;
  
  
  create table `ancient-blade-353417.123.hotel_bookings6`

  AS (
	select 
	reservation_date as booking_date,
	count(dias_entre_cancel_e_chegada) AS cancel_menos_3_dias, 
	count (cancel_menos_3_dias) *  120 as impacto_financeiro
  FROM `ancient-blade-353417.123.hotel_bookings6'
  where is_canceled = 1)
  ORDER BY booking_date;
  
  
  
  
  
  select 
	reservation_status_date as booking_date,
	DATE_DIFF(arrive_date,reservation_status_date,CURRENT_DATE()) AS cancel_menos_3_dias, 
	count (cancel_menos_3_dias) *  120 as impacto_financeiro
  FROM `ancient-blade-353417.123.hotel_bookings5`
  where is_canceled = 1
  ORDER BY booking_date;



select *, 
concat (arrival_date_year, '-',
case
when arrival_date_month = 'January' THEN '01'
when arrival_date_month = 'february' THEN '02'
when arrival_date_month = 'March' THEN '03'
when arrival_date_month = 'April' THEN '04'
when arrival_date_month = 'May' THEN '05'
when arrival_date_month = 'June' THEN '06'
when arrival_date_month = 'July' THEN '07'
when arrival_date_month = 'August' THEN '08'
when arrival_date_month = 'September' THEN '09'
when arrival_date_month = 'Octuber' THEN '10'
when arrival_date_month = 'November' THEN '11'
when arrival_date_month = 'December' THEN '12'
end,
 '-',
arrival_date_day_of_month ) as format_date
FROM `ancient-blade-353417.123.hotel_bookings2`




create table `ancient-blade-353417.123.hotel_bookings3` as (select *, CAST(
concat (arrival_date_year, '-',
case
when arrival_date_month = 'January' THEN '01'
when arrival_date_month = 'february' THEN '02'
when arrival_date_month = 'March' THEN '03'
when arrival_date_month = 'April' THEN '04'
when arrival_date_month = 'May' THEN '05'
when arrival_date_month = 'June' THEN '06'
when arrival_date_month = 'July' THEN '07'
when arrival_date_month = 'August' THEN '08'
when arrival_date_month = 'September' THEN '09'
when arrival_date_month = 'Octuber' THEN '10'
when arrival_date_month = 'November' THEN '11'
when arrival_date_month = 'December' THEN '12'
end,
 '-',
arrival_date_day_of_month ) AS DATE) AS arrival_date_v2 
FROM `ancient-blade-353417.123.hotel_bookings2`);



Power BI


ancient-blade-353417

--Criar tabela 8 para contar o número de cancelamentos com menos de 3 dias 
select  
booking_date,
count(dias_entre_cancel_chegada) as numero_canc_menos_3_days,
count(dias_entre_cancel_chegada) * 120 as financial_impact
from `ancient-blade-353417.123.hotel_bookings8``
where dias_entre_cancel_chegada < 3
group by booking_date)


SITE BETWEEN 


https://blog.coupler.io/bigquery-between/



select *, 
concat (arrival_date_year, '-',
case
when arrival_date_month = 'January' THEN '01'
when arrival_date_month = 'february' THEN '02'
when arrival_date_month = 'March' THEN '03'
when arrival_date_month = 'April' THEN '04'
when arrival_date_month = 'May' THEN '05'
when arrival_date_month = 'June' THEN '06'
when arrival_date_month = 'July' THEN '07'
when arrival_date_month = 'August' THEN '08'
when arrival_date_month = 'September' THEN '09'
when arrival_date_month = 'Octuber' THEN '10'
when arrival_date_month = 'November' THEN '11'
when arrival_date_month = 'December' THEN '12'
end,
 '-',
arrival_date_day_of_month ) as format_date
FROM `ancient-blade-353417.123.hotel_bookings2`


6.1

create table `ancient-blade-353417.123.hotel_bookings11`
as 
SELECT *,
    CASE
        WHEN lead_time BETWEEN 0 AND 15 THEN 'segmento1'
        WHEN lead_time BETWEEN 15 AND 30 THEN 'segmento2'
		WHEN lead_time BETWEEN 30 AND 60 THEN 'segmento3'
		WHEN lead_time BETWEEN 60 AND 90 THEN 'segmento4'
		WHEN lead_time BETWEEN 90 AND 180 THEN 'segmento5'
		WHEN lead_time BETWEEN 180 AND 360 THEN 'segmento6'
		WHEN lead_time >360 THEN 'Longo'
	END AS lead_time_segment_2
FROM `ancient-blade-353417.123.hotel_bookings5`



create table `ancient-blade-353417.123.hotel_bookings9`
as 
SELECT *
    CASE
        WHEN lead_time BETWEEN 0 AND 15 THEN '0-15'
        WHEN lead_time BETWEEN 15 AND 30 THEN '15-30'
		WHEN lead_time BETWEEN 30 AND 60 THEN '30-60'
        WHEN lead_time BETWEEN 90 AND 180 THEN '90-180'
		WHEN lead_time BETWEEN 180 AND 360 THEN '180-360'
		WHEN lead_time >360 THEN 'Longo'
	END AS lead_time_segment_2
FROM `ancient-blade-353417.123.hotel_bookings8`

6.1
select lead_time_segment_2,
avg (is_canceled) as taxa_de_cancelamento,
FROM `ancient-blade-353417.123.hotel_bookings9`
group By lead_time_segment_2


--create table `ancient-blade-353417.123.hotel_bookings9`
--as 
SELECT *,
    CASE
        WHEN lead_time BETWEEN 0 AND 15 THEN '0-15'
        WHEN lead_time BETWEEN 15 AND 30 THEN '15-30'
		WHEN lead_time BETWEEN 30 AND 60 THEN '30-60'
        WHEN lead_time BETWEEN 90 AND 180 THEN '90-180'
		WHEN lead_time BETWEEN 180 AND 360 THEN '180-360'
		WHEN lead_time >360 THEN 'Longo'
	END AS lead_time_segment_2
FROM `ancient-blade-353417.123.hotel_bookings5`

6.3 
--create table `ancient-blade-353417.123.hotel_bookings13`
--as 
SELECT 
hotel, 
booking_changes,
CASE 
WHEN booking_changes =0 then 'SEM MUDANCAS'
WHEN booking_changes BETWEEN 1 AND 10 then 'MUDANCAS 1-10'
WHEN booking_changes >10 THEN '10-A-MAIS-MUDANCAS'
ELSE
NULL
END AS booking_changes
from `ancient-blade-353417.123.hotel_bookings10`